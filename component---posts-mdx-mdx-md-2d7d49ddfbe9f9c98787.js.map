{"version":3,"sources":["webpack:///./posts/mdx/mdx.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","data","width","height","src","frameBorder","to","isMDXComponent"],"mappings":"4RAUaA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,2DACA,8GAA6F,+BAAGC,WAAW,KAAQ,CAC/G,KAAQ,8BADiF,UAA7F,yEAGA,kCACA,2BAAU,+BAAGA,WAAW,KAAQ,CAC5B,KAAQ,2CADF,YAAV,sLAGA,kBAAS,CACP,UAAa,mBACb,gBAAiB,QAChB,iCAAKA,WAAW,OAAU,CACzB,UAAa,kBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBADd,uLAUL,yGACA,wDACA,sJAAqI,+BAAGA,WAAW,KAAQ,CACvJ,KAAQ,qDADyH,SAArI,KAGA,6CACA,iEACA,kBAAS,CACP,UAAa,mBACb,gBAAiB,QAChB,iCAAKA,WAAW,OAAU,CACzB,UAAa,kBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBADd,wGAIL,uBA3CK,6BA6CL,YAAC,IAAD,CAAUC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,MAAO,IAAKC,OAAQ,IAAKJ,QAAQ,aACrE,4CACA,kBAAS,CACP,UAAa,mBACb,gBAAiB,QAChB,iCAAKC,WAAW,OAAU,CACzB,UAAa,kBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBADd,0CAIL,YAAC,IAAD,CAAMD,QAAQ,SACd,mDACA,kBAAS,CACP,UAAa,mBACb,gBAAiB,QAChB,iCAAKC,WAAW,OAAU,CACzB,UAAa,kBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBADd,mDAIL,YAAC,IAAD,CAASD,QAAQ,YACjB,oCACA,iDACA,sBAAQK,IAAI,+BAA+BF,MAAM,OAAOC,OAAO,MAAME,YAAY,MACjF,8DACA,YAAC,OAAD,CAAMC,GAAG,IAAIP,QAAQ,QAArB,wBAKJH,EAAWW,gBAAiB","file":"component---posts-mdx-mdx-md-2d7d49ddfbe9f9c98787.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/alain/Documents/Git/GATSBY/theme-perceptible/theme/src/templates/single-post.js\";\nimport Wave from './wave';\nimport { Link } from 'gatsby';\nimport Barchart from './barchart';\nimport Counter from './counter';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`MDX = Markdown avec du JSX dedans`}</h1>\n    <p>{`Ce billet est écrit en MDX. D'ailleurs tout ce site est écrit en MDX, grace au génial `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.com/\"\n      }}>{`Gatsby`}</a>{` qui fera peut être l'objet d'un futur billet. Explications pour MDX:`}</p>\n    <h2>{`Markdown`}</h2>\n    <p>{`Le `}<a parentName=\"p\" {...{\n        \"href\": \"https://fr.wikipedia.org/wiki/Markdown\"\n      }}>{`markdown`}</a>{` est une idée simple de 2004 qui consiste à utiliser des conventions de formatage encodées dans le corps même du texte qui soient lisibles même sans formatage. Quelques exemples:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-text\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`- ** mot ** → mot en gras\n- * mot * → mot en italique\n- ## Titre → Titre en h2\n- * espace → liste de points\n- 1. espace → liste numéroté\n- [] → checkbox\n- tab → quote\n- …`}</code></pre></div>\n    <p>{`Le texte reste lisible tel quel et peut être transformé en html automatiquement.`}</p>\n    <h2>{`JSX est le javascript de React`}</h2>\n    <p>{`Le JSX est une extension de javascript dont la syntaxe est de style html et qui permet de définir et d'appeler des composants `}<a parentName=\"p\" {...{\n        \"href\": \"https://fr.wikipedia.org/wiki/React_(JavaScript)\"\n      }}>{`React`}</a>{`.`}</p>\n    <h2>{`Comment ça marche ?`}</h2>\n    <p>{`Le texte suivant dans un billet markdown`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-text\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`import Barchart from './barchart'\n<Barchart data={[1, 2, 3, 7, 1, 3]} width={600} height={400} />`}</code></pre></div>\n    <br />\nse transforme en une image\n    <Barchart data={[1, 2, 3, 7, 1, 3]} width={600} height={400} mdxType=\"Barchart\" />\n    <h2>{`Un compteur simple`}</h2>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-text\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`import Wave from './wave';\n<Wave />`}</code></pre></div>\n    <Wave mdxType=\"Wave\" />\n    <h2>{`Un compteur plus complexe`}</h2>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-text\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`import Counter from './counter';\n<Counter />`}</code></pre></div>\n    <Counter mdxType=\"Counter\" />\n    <h1>{`par iFrame`}</h1>\n    <p>{`Invocation d'une iframe:`}</p>\n    <iframe src=\"/sandbox/quadtree/index.html\" width=\"1000\" height=\"800\" frameBorder=\"0\" />\n    <h2>{`... conclusion et retour à l'accueil`}</h2>\n    <Link to=\"/\" mdxType=\"Link\">Revenir à l'accueil</Link>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}